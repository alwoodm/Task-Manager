version: '3.8'

# Definicja sieci
networks:
  laravel_internal:
    driver: bridge

# Definicja wolumin√≥w
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

services:
  # Kontener PHP (aplikacja Laravel)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        user: laravel
        uid: 1000
    container_name: task_manager_app
    restart: unless-stopped
    working_dir: /www
    volumes:
      - ./:/www
    networks:
      - laravel_internal
    depends_on:
      - db
      - redis
    environment:
      DB_CONNECTION: ${DB_CONNECTION:-mysql}
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-task_manager}
      DB_USERNAME: ${DB_USERNAME:-task_user}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SESSION_DRIVER: redis
      CACHE_DRIVER: redis

  # Kontener Nginx (serwer WWW)
  nginx:
    image: nginx:alpine
    container_name: task_manager_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - laravel_internal
    depends_on:
      - app

  # Kontener MySQL (baza danych)
  db:
    image: mysql:8.0
    container_name: task_manager_db
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-task_manager}
      MYSQL_USER: ${DB_USERNAME:-task_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret_root}
      SERVICE_NAME: mysql
    networks:
      - laravel_internal

  # Kontener Redis (cache/kolejki)
  redis:
    image: redis:alpine
    container_name: task_manager_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - laravel_internal
